# This is a basic workflow to help you get started with Actions

name: Multi Trail Artifact

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env: # Set the secret as an input
  APP_NAME: ${{ github.event.repository.name }}
  BUILD_NUMBER: ${{ github.run_number }}
  GIT_REPO: ${{ github.repository }}
  GIT_REPO_URL: ${{ github.event.repository.clone_url }}
  GIT_BRANCH: ${{ github.ref_name }}
  GIT_COMMIT: ${{ github.sha }}
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  COMMIT_URL: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_KEY }} # Set the Kosli API token as a secret in your repository
  KOSLI_ORG: sofusalbertsen
  KOSLI_FLOW_ORIG: multi-trail-artifact
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        flow: [1, 2, 3] # Define a matrix to run the same job for multiple flows
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      KOSLI_FLOW: multi-trail-artifact${{ matrix.flow }} # Set the flow environment variable based on the matrix

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: setup-kosli-cli
        uses: kosli-dev/setup-cli-action@v2
      - name: Update Flow
        run: kosli create flow ${{env.KOSLI_FLOW}} --description "Flow${{matrix.flow}} for multi-flow-artifact" --template-file=${{env.KOSLI_FLOW_ORIG}}/kosli-config/flow.yaml
      # Runs a single command using the runners shell
      - name: run the scenario up
        run: bash ${{env.KOSLI_FLOW_ORIG}}/1.sh
  output:
      name: kosli-output
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Check Kosli Output
          run: |
            kosli get trail -o json ${GIT_COMMIT} > data.json
            echo "Kosli output saved to data.json"
            cat data.json
        - name: opload-artifact
          uses: actions/upload-artifact@v4.6.0
          with:
            path: data.json
        - name: Check Artifacts
          run: |
            if grep -q '"name": "app"' data.json; then
              echo "Artifact 'app' found in the trail."
            else
              echo "Artifact 'app' not found in the trail."
              exit 1
            fi